/**
 * @packageDocumentation
 * @module api.functional
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "nestia-fetcher";
import type { IConnection } from "nestia-fetcher";

import type { __type } from "./../../../src/api/account/presentation/account.controller";

export * as sign_in from "./sign_in";
export * as oauth from "./oauth";
export * as sign_out from "./sign_out";

/**
 * access token 리프레시 API
 * 
 * @returns 재생성된 access_token을 포함합니다.
 * 
 * @controller AccountController.refresh()
 * @path GET /refresh
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function refresh
    (
        connection: IConnection
    ): Promise<refresh.Output>
{
    return Fetcher.fetch
    (
        connection,
        refresh.ENCRYPTED,
        refresh.METHOD,
        refresh.path()
    );
}
export namespace refresh
{
    export type Output = __type;

    export const METHOD = "GET" as const;
    export const PATH: string = "/refresh";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/refresh`;
    }
}